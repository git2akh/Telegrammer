// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.

public extension Bot {

    /// Parameters container struct for `setMyDefaultAdministratorRights` method
    struct SetMyDefaultAdministratorRightsParams: JSONEncodable {

        /// A JSON-serialized object describing new default administrator rights. If not specified, the default administrator rights will be cleared.
        var rights: ChatAdministratorRights?

        /// Pass True to change the default administrator rights of the bot in channels. Otherwise, the default administrator rights of the bot for groups and supergroups will be changed.
        var forChannels: Bool?

        /// Custom keys for coding/decoding `SetMyDefaultAdministratorRightsParams` struct
        enum CodingKeys: String, CodingKey {
            case rights = "rights"
            case forChannels = "for_channels"
        }

        public init(rights: ChatAdministratorRights? = nil, forChannels: Bool? = nil) {
            self.rights = rights
            self.forChannels = forChannels
        }
    }

    /**
     Use this method to change the default administrator rights requested by the bot when it's added as an administrator to groups or channels. These rights will be suggested to users, but they are are free to modify the list before adding the bot. Returns True on success.

     SeeAlso Telegram Bot API Reference:
     [SetMyDefaultAdministratorRightsParams](https://core.telegram.org/bots/api#setmydefaultadministratorrights)
     
     - Parameters:
         - params: Parameters container, see `SetMyDefaultAdministratorRightsParams` struct
     - Throws: Throws on errors
     - Returns: Future of `Bool` type
     */
    @discardableResult
    func setMyDefaultAdministratorRights(params: SetMyDefaultAdministratorRightsParams? = nil) throws -> Future<Bool> {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try client
            .request(endpoint: "setMyDefaultAdministratorRights", body: body, headers: headers)
            .flatMapThrowing { (container) -> Bool in
                return try self.processContainer(container)
        }
    }
}

// MARK: Concurrency Support
#if compiler(>=5.5)
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
public extension Bot {

    /**
     Use this method to change the default administrator rights requested by the bot when it's added as an administrator to groups or channels. These rights will be suggested to users, but they are are free to modify the list before adding the bot. Returns True on success.

     SeeAlso Telegram Bot API Reference:
     [SetMyDefaultAdministratorRightsParams](https://core.telegram.org/bots/api#setmydefaultadministratorrights)
     
     - Parameters:
         - params: Parameters container, see `SetMyDefaultAdministratorRightsParams` struct
     - Throws: Throws on errors
     - Returns: Future of `Bool` type
     */
    @discardableResult
    func setMyDefaultAdministratorRights(params: SetMyDefaultAdministratorRightsParams? = nil) async throws -> Bool {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try self.processContainer(try await client.request(endpoint: "setMyDefaultAdministratorRights", body: body, headers: headers))
    }
}
#endif
