// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.

public extension Bot {

    /// Parameters container struct for `answerWebAppQuery` method
    struct AnswerWebAppQueryParams: JSONEncodable {

        /// Unique identifier for the query to be answered
        var webAppQueryId: String

        /// A JSON-serialized object describing the message to be sent
        var result: InlineQueryResult

        /// Custom keys for coding/decoding `AnswerWebAppQueryParams` struct
        enum CodingKeys: String, CodingKey {
            case webAppQueryId = "web_app_query_id"
            case result = "result"
        }

        public init(webAppQueryId: String, result: InlineQueryResult) {
            self.webAppQueryId = webAppQueryId
            self.result = result
        }
    }

    /**
     Use this method to set the result of an interaction with a Web App and send a corresponding message on behalf of the user to the chat from which the query originated. On success, a SentWebAppMessage object is returned.

     SeeAlso Telegram Bot API Reference:
     [AnswerWebAppQueryParams](https://core.telegram.org/bots/api#answerwebappquery)
     
     - Parameters:
         - params: Parameters container, see `AnswerWebAppQueryParams` struct
     - Throws: Throws on errors
     - Returns: Future of `SentWebAppMessage` type
     */
    @discardableResult
    func answerWebAppQuery(params: AnswerWebAppQueryParams) throws -> Future<SentWebAppMessage> {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try client
            .request(endpoint: "answerWebAppQuery", body: body, headers: headers)
            .flatMapThrowing { (container) -> SentWebAppMessage in
                return try self.processContainer(container)
        }
    }
}

// MARK: Concurrency Support
#if compiler(>=5.5)
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
public extension Bot {

    /**
     Use this method to set the result of an interaction with a Web App and send a corresponding message on behalf of the user to the chat from which the query originated. On success, a SentWebAppMessage object is returned.

     SeeAlso Telegram Bot API Reference:
     [AnswerWebAppQueryParams](https://core.telegram.org/bots/api#answerwebappquery)
     
     - Parameters:
         - params: Parameters container, see `AnswerWebAppQueryParams` struct
     - Throws: Throws on errors
     - Returns: Future of `SentWebAppMessage` type
     */
    @discardableResult
    func answerWebAppQuery(params: AnswerWebAppQueryParams) async throws -> SentWebAppMessage {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try self.processContainer(try await client.request(endpoint: "answerWebAppQuery", body: body, headers: headers))
    }
}
#endif
