// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.

public extension Bot {

    /// Parameters container struct for `banChatSenderChat` method
    struct BanChatSenderChatParams: JSONEncodable {

        /// Unique identifier for the target chat or username of the target channel (in the format @channelusername)
        var chatId: ChatId

        /// Unique identifier of the target sender chat
        var senderChatId: Int64

        /// Custom keys for coding/decoding `BanChatSenderChatParams` struct
        enum CodingKeys: String, CodingKey {
            case chatId = "chat_id"
            case senderChatId = "sender_chat_id"
        }

        public init(chatId: ChatId, senderChatId: Int64) {
            self.chatId = chatId
            self.senderChatId = senderChatId
        }
    }

    /**
     Use this method to ban a channel chat in a supergroup or a channel. Until the chat is unbanned, the owner of the banned chat won't be able to send messages on behalf of any of their channels. The bot must be an administrator in the supergroup or channel for this to work and must have the appropriate administrator rights. Returns True on success.

     SeeAlso Telegram Bot API Reference:
     [BanChatSenderChatParams](https://core.telegram.org/bots/api#banchatsenderchat)
     
     - Parameters:
         - params: Parameters container, see `BanChatSenderChatParams` struct
     - Throws: Throws on errors
     - Returns: Future of `Bool` type
     */
    @discardableResult
    func banChatSenderChat(params: BanChatSenderChatParams) throws -> Future<Bool> {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try client
            .request(endpoint: "banChatSenderChat", body: body, headers: headers)
            .flatMapThrowing { (container) -> Bool in
                return try self.processContainer(container)
        }
    }
}

// MARK: Concurrency Support
#if compiler(>=5.5)
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
public extension Bot {

    /**
     Use this method to ban a channel chat in a supergroup or a channel. Until the chat is unbanned, the owner of the banned chat won't be able to send messages on behalf of any of their channels. The bot must be an administrator in the supergroup or channel for this to work and must have the appropriate administrator rights. Returns True on success.

     SeeAlso Telegram Bot API Reference:
     [BanChatSenderChatParams](https://core.telegram.org/bots/api#banchatsenderchat)
     
     - Parameters:
         - params: Parameters container, see `BanChatSenderChatParams` struct
     - Throws: Throws on errors
     - Returns: Future of `Bool` type
     */
    @discardableResult
    func banChatSenderChat(params: BanChatSenderChatParams) async throws -> Bool {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try self.processContainer(try await client.request(endpoint: "banChatSenderChat", body: body, headers: headers))
    }
}
#endif
