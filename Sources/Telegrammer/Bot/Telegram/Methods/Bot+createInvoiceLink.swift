// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.

public extension Bot {

    /// Parameters container struct for `createInvoiceLink` method
    struct CreateInvoiceLinkParams: JSONEncodable {

        /// Product name, 1-32 characters
        var title: String

        /// Product description, 1-255 characters
        var description: String

        /// Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.
        var payload: String

        /// Payment provider token, obtained via BotFather
        var providerToken: String

        /// Three-letter ISO 4217 currency code, see more on currencies
        var currency: String

        /// Price breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)
        var prices: [LabeledPrice]

        /// The maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0
        var maxTipAmount: Int?

        /// A JSON-serialized array of suggested amounts of tips in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.
        var suggestedTipAmounts: [Int]?

        /// JSON-serialized data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.
        var providerData: String?

        /// URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service.
        var photoUrl: String?

        /// Photo size in bytes
        var photoSize: Int?

        /// Photo width
        var photoWidth: Int?

        /// Photo height
        var photoHeight: Int?

        /// Pass True, if you require the user's full name to complete the order
        var needName: Bool?

        /// Pass True, if you require the user's phone number to complete the order
        var needPhoneNumber: Bool?

        /// Pass True, if you require the user's email address to complete the order
        var needEmail: Bool?

        /// Pass True, if you require the user's shipping address to complete the order
        var needShippingAddress: Bool?

        /// Pass True, if the user's phone number should be sent to the provider
        var sendPhoneNumberToProvider: Bool?

        /// Pass True, if the user's email address should be sent to the provider
        var sendEmailToProvider: Bool?

        /// Pass True, if the final price depends on the shipping method
        var isFlexible: Bool?

        /// Custom keys for coding/decoding `CreateInvoiceLinkParams` struct
        enum CodingKeys: String, CodingKey {
            case title = "title"
            case description = "description"
            case payload = "payload"
            case providerToken = "provider_token"
            case currency = "currency"
            case prices = "prices"
            case maxTipAmount = "max_tip_amount"
            case suggestedTipAmounts = "suggested_tip_amounts"
            case providerData = "provider_data"
            case photoUrl = "photo_url"
            case photoSize = "photo_size"
            case photoWidth = "photo_width"
            case photoHeight = "photo_height"
            case needName = "need_name"
            case needPhoneNumber = "need_phone_number"
            case needEmail = "need_email"
            case needShippingAddress = "need_shipping_address"
            case sendPhoneNumberToProvider = "send_phone_number_to_provider"
            case sendEmailToProvider = "send_email_to_provider"
            case isFlexible = "is_flexible"
        }

        public init(title: String, description: String, payload: String, providerToken: String, currency: String, prices: [LabeledPrice], maxTipAmount: Int? = nil, suggestedTipAmounts: [Int]? = nil, providerData: String? = nil, photoUrl: String? = nil, photoSize: Int? = nil, photoWidth: Int? = nil, photoHeight: Int? = nil, needName: Bool? = nil, needPhoneNumber: Bool? = nil, needEmail: Bool? = nil, needShippingAddress: Bool? = nil, sendPhoneNumberToProvider: Bool? = nil, sendEmailToProvider: Bool? = nil, isFlexible: Bool? = nil) {
            self.title = title
            self.description = description
            self.payload = payload
            self.providerToken = providerToken
            self.currency = currency
            self.prices = prices
            self.maxTipAmount = maxTipAmount
            self.suggestedTipAmounts = suggestedTipAmounts
            self.providerData = providerData
            self.photoUrl = photoUrl
            self.photoSize = photoSize
            self.photoWidth = photoWidth
            self.photoHeight = photoHeight
            self.needName = needName
            self.needPhoneNumber = needPhoneNumber
            self.needEmail = needEmail
            self.needShippingAddress = needShippingAddress
            self.sendPhoneNumberToProvider = sendPhoneNumberToProvider
            self.sendEmailToProvider = sendEmailToProvider
            self.isFlexible = isFlexible
        }
    }

    /**
     Use this method to create a link for an invoice. Returns the created invoice link as String on success.

     SeeAlso Telegram Bot API Reference:
     [CreateInvoiceLinkParams](https://core.telegram.org/bots/api#createinvoicelink)
     
     - Parameters:
         - params: Parameters container, see `CreateInvoiceLinkParams` struct
     - Throws: Throws on errors
     - Returns: Future of `the created invoice link as String` type
     */
    @discardableResult
    func createInvoiceLink(params: CreateInvoiceLinkParams) throws -> Future<the created invoice link as String> {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try client
            .request(endpoint: "createInvoiceLink", body: body, headers: headers)
            .flatMapThrowing { (container) -> the created invoice link as String in
                return try self.processContainer(container)
        }
    }
}

// MARK: Concurrency Support
#if compiler(>=5.5)
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
public extension Bot {

    /**
     Use this method to create a link for an invoice. Returns the created invoice link as String on success.

     SeeAlso Telegram Bot API Reference:
     [CreateInvoiceLinkParams](https://core.telegram.org/bots/api#createinvoicelink)
     
     - Parameters:
         - params: Parameters container, see `CreateInvoiceLinkParams` struct
     - Throws: Throws on errors
     - Returns: Future of `the created invoice link as String` type
     */
    @discardableResult
    func createInvoiceLink(params: CreateInvoiceLinkParams) async throws -> the created invoice link as String {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try self.processContainer(try await client.request(endpoint: "createInvoiceLink", body: body, headers: headers))
    }
}
#endif
